name: Python Linting
on:
 push:
   branches: ["main", "develop"]
 pull_request:
   branches: ["main", "develop"]
jobs:
 lint:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       python-version: ["3.13"]
   steps:
     - uses: actions/checkout@v4
     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v5
       with:
         python-version: ${{ matrix.python-version }}
     - name: Cache pip dependencies
       uses: actions/cache@v4
       with:
         path: ~/.cache/pip
         key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
         restore-keys: |
           ${{ runner.os }}-pip-
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install flake8 black isort bandit
         if [ -f pyproject.toml ]; then pip install -e .; fi
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
     - name: Run linting tools
       run: |
         # Store exit codes
         EXIT_CODE=0

         # Run flake8 for errors (fail on issues)
         echo "Running flake8 error checks..."
         if ! flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics; then
           EXIT_CODE=1
         fi

         # Run flake8 for warnings (don't fail)
         echo "Running flake8 complexity checks..."
         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

         # Run black
         echo "Running black..."
         if ! black --check --diff .; then
           EXIT_CODE=1
         fi

         # Run isort
         echo "Running isort..."
         if ! isort --check-only --diff .; then
           EXIT_CODE=1
         fi

         # Run bandit
         echo "Running bandit..."
         bandit -r . -f json -o bandit-report.json || true

         # Exit with error if any critical tool failed
         exit $EXIT_CODE
     - name: Upload bandit report
       uses: actions/upload-artifact@v4
       if: always()
       with:
         name: bandit-report-${{ github.run_id }}
         path: bandit-report.json
         if-no-files-found: warn
